module.exports = {


  friendlyName: 'Get access token',


  description: 'Generate a new access token for acting on behalf of a particular Twitter user account.',


  extendedDescription: 'This machine should be used from your Twitter callback route (i.e. Twitter will redirect the user back to the `callbackUrl` you specify along with two values: "oauth_token" and "oauth_verifier".  These two values can then be passed to this machine in order to get the access token which authorizes your app to access this user\'s Twitter account.)',


  inputs: {

    consumerKey: {
      example: 'xAmBxAmBxAmBkjbyKkjbyKkjbyK',
      description: 'The `consumerKey` associated with one of your Twitter developer apps.',
      required: true,
      whereToGet: {
        url: 'http://dev.twitter.com/apps',
        description: 'Copy and paste an API key, or create one if you haven\'t already.',
        extendedDescription: 'If you don\'t have any Twitter apps created yet, you\'ll need to make one first.'
      }
    },

    consumerSecret: {
      example: 'xAmBxAmBxAmBkjbyKkjbyKkjbyK',
      description: 'The `consumerSecret` associated with one of your Twitter developer apps.',
      required: true,
      whereToGet: {
        url: 'http://dev.twitter.com/apps',
        description: 'Copy and paste an API key, or create one if you haven\'t already.',
        extendedDescription: 'If you don\'t have any Twitter apps created yet, you\'ll need to make one first.'
      }
    },

    oauthToken: {
      example: 'QDvCav5zRSafS795TckAerUV53xzgqRyrcfYX2i_PJFObCvACVRP-V7sfemiMPBh3TWypvagfZ6aoqfwKCNcBxg8XR_skdYUe5tsY9UzX9Z_8q4mR',
      description: 'The token generated by Twitter and provided to the callbackUrl as "oauth_token".',
      extendedDescription: 'This is generated by Twitter and passed as a parameter when redirecting users to the callbackUrl you specified- but only if the user chooses to grant your app the requested permissions.',
      required: true
    },

    oauthVerifier: {
      example: 'QDvCav5zRSafS795TckAerUV53xzgqRyrcfYX2i_PJFObCvACVRP-V7sfemiMPBh3TWypvagfZ6aoqfwKCNcBxg8XR_skdYUe5tsY9UzX9Z_8q4mR',
      description: 'The verification code generated by Twitter and provided to the callbackUrl as "oauth_verifier".',
      extendedDescription: 'This is generated by Twitter and passed as a parameter when redirecting users to the callbackUrl you specified- but only if the user chooses to grant your app the requested permissions.',
      required: true
    }

  },


  defaultExit: 'success',


  exits: {

    error: {
      description: 'Unexpected error occurred.'
    },

    success: {
      description: 'Returns the user\'s permanent tokens, id, and screen name.',
      example: {
        accessToken: '847489329-998DSdafaasdDSF08asdfda08agf6ad6fsdaa08dasdaf76sa5',
        accessSecret: 'SDFSssdfsdf9&SDfSDFSDFSfd9877ssdf',
        screenName: 'johngalt'
      }
    }

  },


  fn: function(inputs, exits) {

    var request = require('request');

    request.post({
      url: 'https://api.twitter.com/oauth/access_token',
      oauth: {
        consumer_key: inputs.consumerKey,
        consumer_secret: inputs.consumerSecret,
        token: inputs.oauthToken,
        verifier: inputs.oauthVerifier
      }
    }, function(err, response, body) {
      if (err) {
        return exits.error(err);
      }
      if (response.statusCode > 299 || response.statusCode < 200) {
        return exits.error(response.statusCode);
      }
      return exits.success({
        screenName: body.screen_name,
        accessToken: body.oauth_token,
        accessSecret: body.oauth_token_secret
      });

    });
  }


};
